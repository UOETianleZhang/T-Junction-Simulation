/*
 * extra.c
 *
 *  Created on: 2016��11��20��
 *      Author: Administrator
 */
#include <stdio.h>
#include "platform.h"
#include "gpio_init.h"
#include "xgpio.h"
#include "control.h"
#include "interface.h"
#include "seg7_display.h"
#include "xil_types.h"
#include "extra.h"

int car_counter=0;
int initial=1;
int initial2=1;
double Car_speed=0;
double Car_speed2=0;
u16 BtnUpIn;
u16 BtnDownIn;
u16 BtnLeftIn;
u16 BtnRightIn;

void DisplayCarByPosition()
{

	if(!carMode)
	{
		/*BtnUpIn= XGpio_DiscreteRead(&P_BTN_UP, 1);
		BtnDownIn= XGpio_DiscreteRead(&P_BTN_DOWN, 1);
		BtnLeftIn= XGpio_DiscreteRead(&P_BTN_LEFT, 1);
		BtnRightIn= XGpio_DiscreteRead(&P_BTN_RIGHT, 1);*/

		excute(BtnUpIn, P_BTN_UP, UP);
		excute(BtnDownIn, P_BTN_DOWN, DOWN);
		excute(BtnLeftIn, P_BTN_LEFT, LEFT);
		excute(BtnRightIn, P_BTN_RIGHT, RIGHT);

		initial=1;
	}
	else
	{
		if(initial)
		{
			target_x = 0;
			target_y = 165;
			initial=0;
			Car_speed=0;
		}
		if(target_x<(290-CARWIDTH))
		{
			if((region_2==GREEN)||(target_x<(290-CARWIDTH-125*Car_speed)))
				target_x=accelerate(target_x, 1.5 SECOND, 0, 0.6, &Car_speed);
			else
				target_x=accelerate(target_x, 1 SECOND, 0.6, 0, &Car_speed);
		}
		else if(target_x<(322))
		{
			if((region_2==GREEN)||(target_x>(290-CARWIDTH)))
			{	target_x=accelerate(target_x, 1 SECOND, 0, 0.6, &Car_speed);

			}

		}
		else if(((target_x>=(322))&&(target_y>=1)))
			target_y=speed(target_y,-0.5);
		else
		{
			target_x = 0;
			target_y = 165;
			Car_speed=0;
		}
	}
	AIcar();
//	target_colour = BLUE;
}

void ChangeCarPosition()
{
	if(car_counter<=1000)
		car_counter++;
	else
		car_counter=0;

}


void excute(u16 button, XGpio P_BTN, int direction)
{
	button= XGpio_DiscreteRead(&P_BTN, 1);

	switch(direction)
	{
		case 1:
			if(button)
				target_y--;
			break;
		case 2:
			if(button)
				target_x--;
			break;
		case 3:
			if(button)
				target_y++;
			break;
		case 4:
			if(button)
				target_x++;
			break;
	}

}

void AIcar()
{
	if(initial2)
		{
			target2_x = 475 - CARHEIGHT;
			target2_y = 0;
			initial2 = 0;
			Car_speed2 = 0.4;
		}
		if(target2_y<(110-CARWIDTH))
			target2_y=accelerate(target2_y, 0.5 SECOND, 0, 0.4, &Car_speed2);

		else if((target2_y>=(110-CARWIDTH))&&(target2_y<=(400-CARWIDTH)))
		{
			if((region_8==GREEN)||(target2_y>=(140-CARWIDTH)))
				target2_y=accelerate(target2_y, 1 SECOND, 0, 0.4, &Car_speed2);
			else
				target2_y=accelerate(target2_y, 1 SECOND, 0.4, 0, &Car_speed2);
		}

		else if((target2_y+CARWIDTH)<479)
			target2_y=accelerate(target2_y, 0.5 SECOND, 0, 0.4, &Car_speed2);
		else
		{
			target2_x = 475 - CARHEIGHT;
			target2_y = 0;
			Car_speed2 = 0;
		}
}

double speed(double address, double speed_add)
{
	address = address + speed_add;
	return address;
}

double accelerate(double address, double period, double LeftLimitSpeed, double RightLimitSpeed, double *speed_add)
{
	if(RightLimitSpeed>LeftLimitSpeed)
	{	if(*speed_add<RightLimitSpeed)
			*speed_add= *speed_add+(RightLimitSpeed-LeftLimitSpeed)/period;
	}
	else
	{
		if(*speed_add>RightLimitSpeed)
				*speed_add= *speed_add+(RightLimitSpeed-LeftLimitSpeed)/period;
	}

	address = speed(address,*speed_add);
	return address;
}
void ColourCar1()
{
	if((region_2!=GREEN)&&((target_x+CARWIDTH)>(320))&&(target_x<(480))&&((target_y+CARHEIGHT)>(160))&&(target_y<(320)))
		target_colour = RED;
	else
		target_colour = BLUE;
}
